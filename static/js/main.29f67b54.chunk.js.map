{"version":3,"sources":["Main/Main.js","App.js","serviceWorker.js","index.js"],"names":["Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","nav","react_default","a","createElement","href","header","className","src","projects","pjName","pjImage","pjDescription","pjPreview","pjSource","style","boxShadow","target","projectLister","pjIndex","PJdata","length","pjFull","i","push","projectName","image","description","preview","source","skillBlock","skillType","skillName","content","id","state","data","Fade_default","footer","_this2","axios","get","then","response","res","resFull","skill_name","console","log","setState","Component","App","react_router_dom","react_router","path","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.29f67b54.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Main.css\";\r\nimport axios from \"axios\";\r\nimport PJdata from \"../Main/Main.json\";\r\nimport Fade from \"react-reveal/Fade\";\r\n\r\nclass Main extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios.get(\"/db\").then(response => {\r\n      let res = response.data.length;\r\n      let resFull = [];\r\n      // For every piece of data in the array push it to a resFull.\r\n      for (let i = 0; i < res; i++) {\r\n        if (i == res - 1) {\r\n          resFull.push(response.data[i].skill_name);\r\n        } else {\r\n          resFull.push(response.data[i].skill_name + \", \");\r\n        }\r\n        console.log(\"Inside state data: \" + resFull);\r\n      }\r\n      // Set state of data to complete array (resFull) of data\r\n      this.setState({\r\n        data: resFull\r\n      });\r\n    });\r\n  }\r\n\r\n  //Navigation bar at the top of the page. Fixed positioning\r\n  nav = () => {\r\n    return (\r\n      <div>\r\n        <p>Jonathan Vega</p>\r\n        <ul>\r\n          <li>\r\n            <a href=\"#about\">About</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#resume\">Resume</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#projects\">Projects</a>\r\n          </li>\r\n          <li>\r\n            <a href=\"#contact\">Contact</a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //Header below the nav\r\n  header = () => {\r\n    return (\r\n      <div className=\"header\">\r\n        <div className=\"headername\">\r\n          <h1>Jonathan Vega</h1>\r\n          <p>Software Developer</p>\r\n        </div>\r\n        <div className=\"list\">\r\n          <ul>\r\n            <li>\r\n              <a href=\"#home\">\r\n                <img src=\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/header/github2.jpg\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"#news\">\r\n                <img src=\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/header/linkedin2.png\" />\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"mailto:jonnyv212@hotmail.com?Subject=Hello\">\r\n                <img src=\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/header/email6.png\" />\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //Generates a project template for the portfolio function.\r\n  projects = (pjName, pjImage, pjDescription, pjPreview, pjSource) => {\r\n    return (\r\n      <div className=\"Pcontainer\">\r\n        <div className=\"Pcontent\">\r\n          <div className=\"Pimg\">\r\n            <img\r\n              src={pjImage}\r\n              style={{ boxShadow: \"0 1rem 1rem rgba(0, 0, 0, 0.2)\" }}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"Pinfo\">\r\n            <div className=\"Ptitle\">{pjName}</div>\r\n            {pjDescription}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"Pbottom\">\r\n          <div className=\"PbottomLinks\">\r\n            <a href={pjPreview}>Demo</a>\r\n\r\n            <a href={pjSource} target=\"_blank\">\r\n              <img src=\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/projects/source.png\" />\r\n              Source\r\n            </a>\r\n          </div>\r\n          <div className=\"Pstacks\">\r\n            <ul>\r\n              <li>ReactJS</li>\r\n              <li>JavaScript </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        {/* <hr /> */}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  //Generates a project based on the JSON data.\r\n  //Takes the JSON data and applies it from a loop to the projects function.\r\n  projectLister = () => {\r\n    let pjIndex = PJdata.length;\r\n    let pjFull = [];\r\n    for (let i = 0; i < pjIndex; i++) {\r\n      pjFull.push(\r\n        this.projects(\r\n          PJdata[i].projectName,\r\n          PJdata[i].image,\r\n          PJdata[i].description,\r\n          PJdata[i].preview,\r\n          PJdata[i].source\r\n        )\r\n      );\r\n    }\r\n\r\n    return pjFull;\r\n  };\r\n\r\n  skillBlock = (image, skillType, skillName) => {\r\n    return (\r\n      <div className=\"skillBlock\">\r\n        <img src={image} />\r\n        <h3 className=\"skillType\">{skillType}</h3>\r\n        <p className=\"skillName\">{skillName}</p>\r\n      </div>\r\n    );\r\n  };\r\n  content = () => {\r\n    return (\r\n      <div id=\"about\">\r\n        <div>\r\n          Description of who I am, what I do. Blah blah blah.\r\n          <div className=\"Resume\">\r\n            <h1>Resume download button here. pdf</h1>\r\n          </div>\r\n          {/* <hr /> */}\r\n        </div>\r\n        <div className=\"skills\">\r\n          <h1>Skills</h1>\r\n          <div className=\"skillContainer\">\r\n            {this.skillBlock(\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/skills/frontend.png\", \"Frontend\", this.state.data)}\r\n            {this.skillBlock(\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/skills/backend.png\", \"Backend\", \"Skill Name Here\")}\r\n            {this.skillBlock(\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/skills/git.png\", \"Other\", \"Skill Name Here\")}\r\n          </div>\r\n        </div>\r\n        <div className=\"Projects\" id=\"projects\">\r\n          <h2>PROJECTS</h2>\r\n          <Fade>{this.projectLister()}</Fade>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  footer = () => {\r\n    return (\r\n      <ul>\r\n        <li>\r\n          <a href=\"#home\">\r\n            <img src=\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/footer/github2.jpg\" />\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#home\">\r\n            <img src=\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/footer/linkedin2.png\" />\r\n          </a>\r\n        </li>\r\n        <li>\r\n          <a href=\"#home\">\r\n            <img src=\"https://jv-portfolio-assets.s3.us-east-2.amazonaws.com/Images/footer/outlook2.png\" />\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"main\">\r\n        <div className=\"nav\">{this.nav()}</div>\r\n\r\n        <div>{this.header()}</div>\r\n        <div className=\"content\">{this.content()}</div>\r\n        <div className=\"footer\">{this.footer()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Main;\r\n","import React, { Component } from \"react\";\r\nimport Main from \"./Main/Main.js\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Route path=\"/\" component={Main} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}